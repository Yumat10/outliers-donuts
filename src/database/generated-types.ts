/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/': {
        get: {
            responses: {
                /** OK */
                200: unknown
            }
        }
    }
    '/blacklists': {
        get: {
            parameters: {
                query: {
                    created_at?: parameters['rowFilter.blacklists.created_at']
                    guild_id?: parameters['rowFilter.blacklists.guild_id']
                    user_ids?: parameters['rowFilter.blacklists.user_ids']
                    /** Filtering Columns */
                    select?: parameters['select']
                    /** Ordering */
                    order?: parameters['order']
                    /** Limiting and Pagination */
                    offset?: parameters['offset']
                    /** Limiting and Pagination */
                    limit?: parameters['limit']
                }
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters['range']
                    /** Limiting and Pagination */
                    'Range-Unit'?: parameters['rangeUnit']
                    /** Preference */
                    Prefer?: parameters['preferCount']
                }
            }
            responses: {
                /** OK */
                200: {
                    schema: definitions['blacklists'][]
                }
                /** Partial Content */
                206: unknown
            }
        }
        post: {
            parameters: {
                body: {
                    /** blacklists */
                    blacklists?: definitions['blacklists']
                }
                query: {
                    /** Filtering Columns */
                    select?: parameters['select']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** Created */
                201: unknown
            }
        }
        delete: {
            parameters: {
                query: {
                    created_at?: parameters['rowFilter.blacklists.created_at']
                    guild_id?: parameters['rowFilter.blacklists.guild_id']
                    user_ids?: parameters['rowFilter.blacklists.user_ids']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
        patch: {
            parameters: {
                query: {
                    created_at?: parameters['rowFilter.blacklists.created_at']
                    guild_id?: parameters['rowFilter.blacklists.guild_id']
                    user_ids?: parameters['rowFilter.blacklists.user_ids']
                }
                body: {
                    /** blacklists */
                    blacklists?: definitions['blacklists']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
    }
    '/guilds': {
        get: {
            parameters: {
                query: {
                    guild_id?: parameters['rowFilter.guilds.guild_id']
                    created_at?: parameters['rowFilter.guilds.created_at']
                    matching_roles?: parameters['rowFilter.guilds.matching_roles']
                    bot_communication_channel_id?: parameters['rowFilter.guilds.bot_communication_channel_id']
                    active?: parameters['rowFilter.guilds.active']
                    blacklist?: parameters['rowFilter.guilds.blacklist']
                    /** Filtering Columns */
                    select?: parameters['select']
                    /** Ordering */
                    order?: parameters['order']
                    /** Limiting and Pagination */
                    offset?: parameters['offset']
                    /** Limiting and Pagination */
                    limit?: parameters['limit']
                }
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters['range']
                    /** Limiting and Pagination */
                    'Range-Unit'?: parameters['rangeUnit']
                    /** Preference */
                    Prefer?: parameters['preferCount']
                }
            }
            responses: {
                /** OK */
                200: {
                    schema: definitions['guilds'][]
                }
                /** Partial Content */
                206: unknown
            }
        }
        post: {
            parameters: {
                body: {
                    /** guilds */
                    guilds?: definitions['guilds']
                }
                query: {
                    /** Filtering Columns */
                    select?: parameters['select']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** Created */
                201: unknown
            }
        }
        delete: {
            parameters: {
                query: {
                    guild_id?: parameters['rowFilter.guilds.guild_id']
                    created_at?: parameters['rowFilter.guilds.created_at']
                    matching_roles?: parameters['rowFilter.guilds.matching_roles']
                    bot_communication_channel_id?: parameters['rowFilter.guilds.bot_communication_channel_id']
                    active?: parameters['rowFilter.guilds.active']
                    blacklist?: parameters['rowFilter.guilds.blacklist']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
        patch: {
            parameters: {
                query: {
                    guild_id?: parameters['rowFilter.guilds.guild_id']
                    created_at?: parameters['rowFilter.guilds.created_at']
                    matching_roles?: parameters['rowFilter.guilds.matching_roles']
                    bot_communication_channel_id?: parameters['rowFilter.guilds.bot_communication_channel_id']
                    active?: parameters['rowFilter.guilds.active']
                    blacklist?: parameters['rowFilter.guilds.blacklist']
                }
                body: {
                    /** guilds */
                    guilds?: definitions['guilds']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
    }
    '/matches': {
        get: {
            parameters: {
                query: {
                    id?: parameters['rowFilter.matches.id']
                    guild_id?: parameters['rowFilter.matches.guild_id']
                    user1_id?: parameters['rowFilter.matches.user1_id']
                    user2_id?: parameters['rowFilter.matches.user2_id']
                    created_at?: parameters['rowFilter.matches.created_at']
                    matching_round?: parameters['rowFilter.matches.matching_round']
                    /** Filtering Columns */
                    select?: parameters['select']
                    /** Ordering */
                    order?: parameters['order']
                    /** Limiting and Pagination */
                    offset?: parameters['offset']
                    /** Limiting and Pagination */
                    limit?: parameters['limit']
                }
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters['range']
                    /** Limiting and Pagination */
                    'Range-Unit'?: parameters['rangeUnit']
                    /** Preference */
                    Prefer?: parameters['preferCount']
                }
            }
            responses: {
                /** OK */
                200: {
                    schema: definitions['matches'][]
                }
                /** Partial Content */
                206: unknown
            }
        }
        post: {
            parameters: {
                body: {
                    /** matches */
                    matches?: definitions['matches']
                }
                query: {
                    /** Filtering Columns */
                    select?: parameters['select']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** Created */
                201: unknown
            }
        }
        delete: {
            parameters: {
                query: {
                    id?: parameters['rowFilter.matches.id']
                    guild_id?: parameters['rowFilter.matches.guild_id']
                    user1_id?: parameters['rowFilter.matches.user1_id']
                    user2_id?: parameters['rowFilter.matches.user2_id']
                    created_at?: parameters['rowFilter.matches.created_at']
                    matching_round?: parameters['rowFilter.matches.matching_round']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
        patch: {
            parameters: {
                query: {
                    id?: parameters['rowFilter.matches.id']
                    guild_id?: parameters['rowFilter.matches.guild_id']
                    user1_id?: parameters['rowFilter.matches.user1_id']
                    user2_id?: parameters['rowFilter.matches.user2_id']
                    created_at?: parameters['rowFilter.matches.created_at']
                    matching_round?: parameters['rowFilter.matches.matching_round']
                }
                body: {
                    /** matches */
                    matches?: definitions['matches']
                }
                header: {
                    /** Preference */
                    Prefer?: parameters['preferReturn']
                }
            }
            responses: {
                /** No Content */
                204: never
            }
        }
    }
}

export interface definitions {
    blacklists: {
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string
        /**
         * Format: text
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        guild_id: string
        /** Format: json */
        user_ids: unknown
    }
    guilds: {
        /**
         * Format: text
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        guild_id: string
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string
        /** Format: ARRAY */
        matching_roles?: unknown[]
        /** Format: text */
        bot_communication_channel_id: string
        /** Format: boolean */
        active: boolean
        /** Format: ARRAY */
        blacklist?: unknown[]
    }
    matches: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number
        /** Format: text */
        guild_id: string
        /** Format: text */
        user1_id: string
        /** Format: text */
        user2_id: string
        /** Format: timestamp without time zone */
        created_at?: string
        /** Format: integer */
        matching_round: number
    }
}

export interface parameters {
    /**
     * @description Preference
     * @enum {string}
     */
    preferParams: 'params=single-object'
    /**
     * @description Preference
     * @enum {string}
     */
    preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
    /**
     * @description Preference
     * @enum {string}
     */
    preferCount: 'count=none'
    /** @description Filtering Columns */
    select: string
    /** @description On Conflict */
    on_conflict: string
    /** @description Ordering */
    order: string
    /** @description Limiting and Pagination */
    range: string
    /**
     * @description Limiting and Pagination
     * @default items
     */
    rangeUnit: string
    /** @description Limiting and Pagination */
    offset: string
    /** @description Limiting and Pagination */
    limit: string
    /** @description blacklists */
    'body.blacklists': definitions['blacklists']
    /** Format: timestamp with time zone */
    'rowFilter.blacklists.created_at': string
    /** Format: text */
    'rowFilter.blacklists.guild_id': string
    /** Format: json */
    'rowFilter.blacklists.user_ids': string
    /** @description guilds */
    'body.guilds': definitions['guilds']
    /** Format: text */
    'rowFilter.guilds.guild_id': string
    /** Format: timestamp with time zone */
    'rowFilter.guilds.created_at': string
    /** Format: ARRAY */
    'rowFilter.guilds.matching_roles': string
    /** Format: text */
    'rowFilter.guilds.bot_communication_channel_id': string
    /** Format: boolean */
    'rowFilter.guilds.active': string
    /** Format: ARRAY */
    'rowFilter.guilds.blacklist': string
    /** @description matches */
    'body.matches': definitions['matches']
    /** Format: bigint */
    'rowFilter.matches.id': string
    /** Format: text */
    'rowFilter.matches.guild_id': string
    /** Format: text */
    'rowFilter.matches.user1_id': string
    /** Format: text */
    'rowFilter.matches.user2_id': string
    /** Format: timestamp without time zone */
    'rowFilter.matches.created_at': string
    /** Format: integer */
    'rowFilter.matches.matching_round': string
}
